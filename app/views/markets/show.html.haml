.row
  .col-lg-9
    %h2
      = @market.label
      .small
        MS #{ @market_state.timestamp.utc } 
        = surround '(', ')' do
          %time.timeago{:datetime => @market_state.timestamp.utc.iso8601}><
            = @market_state.timestamp.utc.iso8601
  .col-lg-3
    - if @desired_portfolio.include?(@market)
      %a.btn.btn-success.pull-right{:href => account_path}
        Desired market
    - else
      = form_tag(account_desired_portfolio_items_path) do 
        %input{:type => 'hidden', :name => 'market_id', :value => @market.id }
        %button.btn.btn-default.pull-right
          Add to desired portfolio

= render 'market_stock_chart', :market => @market

%h4 Last bot run actions

#bot_run_actions.auto-refresh-partial{:'data-partial' => 'bot_run_actions',
  :'data-frequency' => 10000,
  :'data-param_market_id' => @market.id}
  = render 'shared/bot_run_actions',
           :bot_run_actions => data_provider.bot_run_actions(:account_id => @account.id, :market_id => @market.id)


#order_books.auto-refresh-partial{:'data-partial' => 'order_books',
  :'data-frequency' => 10000,
  :'data-param_market_id' => @market.id}
  = render 'shared/order_books', :sell_orders => @sell_orders, :buy_orders => @buy_orders

.row
  %p
    %center
      = link_to 'Browse though historical orderbook states', market_market_states_path(@market.id)

- account = current_user.crypto_trader_account
%h4 Account Trades 

#account_trades.auto-refresh-partial{:'data-partial' => 'account_trades',
  :'data-frequency' => 10000,
  :'data-param_market_id' => @market.id}
  = render 'shared/account_trades', :account_trades => @account_trades

.row
  %p
    %center
      = link_to 'Show all market trades', market_market_trades_path(@market.id)
